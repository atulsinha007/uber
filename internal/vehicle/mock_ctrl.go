// Code generated by MockGen. DO NOT EDIT.
// Source: ./ctrl.go

// Package vehicle is a generated GoMock package.
package vehicle

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCtrl is a mock of Ctrl interface
type MockCtrl struct {
	ctrl     *gomock.Controller
	recorder *MockCtrlMockRecorder
}

// MockCtrlMockRecorder is the mock recorder for MockCtrl
type MockCtrlMockRecorder struct {
	mock *MockCtrl
}

// NewMockCtrl creates a new mock instance
func NewMockCtrl(ctrl *gomock.Controller) *MockCtrl {
	mock := &MockCtrl{ctrl: ctrl}
	mock.recorder = &MockCtrlMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCtrl) EXPECT() *MockCtrlMockRecorder {
	return m.recorder
}

// CreateVehicle mocks base method
func (m *MockCtrl) CreateVehicle(req CreateVehicleRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVehicle", req)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateVehicle indicates an expected call of CreateVehicle
func (mr *MockCtrlMockRecorder) CreateVehicle(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVehicle", reflect.TypeOf((*MockCtrl)(nil).CreateVehicle), req)
}
